services:
  # cardano-node:
  #   image: ghcr.io/intersectmbo/cardano-node:9.1.0
  #   command: [ "run", "--config", "/config/config.json", "--database-path", "/data/db", "--socket-path", "/ipc/node.socket", "--topology", "/config/topology.json" ]
  #   volumes:
  #     - ./server/config/network/${NETWORK:-mainnet}/cardano-node:/config
  #     - ./server/config/network/${NETWORK:-mainnet}/genesis:/genesis
  #     - node-db:/data
  #     - node-ipc:/ipc
  #   restart: on-failure
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "400k"
  #       max-file: "20"
  #   healthcheck:
  #     # Ping the EKG port to see if it responds.
  #     # Assuming if EKG isn't up then the rest of cardano-node isn't either.
  #     test: [ "CMD-SHELL", "curl -f 127.0.0.1:12788 || exit 1" ]
  #     interval: 60s
  #     timeout: 10s
  #     retries: 5
  #   networks:
  #     - cardano-node

  # ogmios:
  #   image: cardanosolutions/ogmios:latest
  #   restart: on-failure
  #   command: [ "--host", "0.0.0.0", "--node-socket", "/ipc/node.socket", "--node-config", "/config/cardano-node/config.json" ]
  #   volumes:
  #     - ./server/config/network/${NETWORK:-mainnet}:/config
  #     - node-ipc:/ipc
  #   ports:
  #     - ${OGMIOS_PORT:-1337}:1337
  #   networks:
  #     - cardano-node

  # cardano-db-sync:
  #   image: ghcr.io/intersectmbo/cardano-db-sync:13.3.0.0
  #   environment:
  #     - NETWORK=${NETWORK:-mainnet}
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PORT=5432
  #     - POSTGRES_DB=cexplorer
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   depends_on:
  #     # Depend on both services to be healthy before starting.
  #     cardano-node:
  #       condition: service_healthy
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - cardano-node
  #     - postgres
  #   volumes:
  #     - db-sync-data:/var/lib/cexplorer
  #     - node-ipc:/node-ipc
  #   restart: on-failure
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "200k"
  #       max-file: "10"

  # kupo:
  #   image: cardanosolutions/kupo:latest
  #   container_name: kupo
  #   volumes:
  #     - ./db:/workdir # Mounts the host directory to the container's working directory
  #   command: >
  #     --ogmios-host ogmios --ogmios-port ${OGMIOS_PORT:-1337}   --since 2436684.b27b0b29c157ffd6e49d7411407dc39e69ad8b307c728b5f1c167caaeda3e05e --workdir /workdir
  #   restart: unless-stopped
  #   depends_on:
  #     - ogmios

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_LOGGING: "true"
      POSTGRES_DB: cexplorer
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - postgres
    healthcheck:
      # Use pg_isready to check postgres is running. Substitute different
      # user `postgres` if you've setup differently to config/pgpass-mainnet
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 15432:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - postgres

#Make sure the external volumes are created with:
# docker volume create volume_name

volumes:
  node-db:
    external: true
  node-ipc:
    external: true
  db-sync-data:
    external: true
  postgres:
  pgadmin:


networks:
  cardano-node: {}
  postgres: {}
